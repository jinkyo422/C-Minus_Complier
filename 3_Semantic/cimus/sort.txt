
C-MINUS COMPILATION: sort.cm

Syntax tree:
  Array var declaration, name : x, size : 10, type : int
  Function declaration, name : minloc, return type : int
    Array parameter, name : a, type : int
    Single parameter, name : low, type : int
    Single parameter, name : high, type : int
    Compound statement : 
      Var declaration, name : i, type : int
      Var declaration, name : x, type : int
      Var declaration, name : k, type : int
      Assign: (destination) (source) 
        Id: k
        Id: low
      Assign: (destination) (source) 
        Id: x
        ArrId: a, with index below
          Id: low
      Assign: (destination) (source) 
        Id: i
        Op: +
          Id: low
          Const: 1
      While
        Op: <
          Id: i
          Id: high
        Compound statement : 
          If (condition) (body) (else)
            Op: <
              ArrId: a, with index below
                Id: i
              Id: x
            Compound statement : 
              Assign: (destination) (source) 
                Id: x
                ArrId: a, with index below
                  Id: i
              Assign: (destination) (source) 
                Id: k
                Id: i
          Assign: (destination) (source) 
            Id: i
            Op: +
              Id: i
              Const: 1
      Return :
        Id: k
  Function declaration, name : sort, return type : void
    Array parameter, name : a, type : int
    Single parameter, name : low, type : int
    Single parameter, name : high, type : int
    Compound statement : 
      Var declaration, name : i, type : int
      Var declaration, name : k, type : int
      Assign: (destination) (source) 
        Id: i
        Id: low
      While
        Op: <
          Id: i
          Op: -
            Id: high
            Const: 1
        Compound statement : 
          Var declaration, name : t, type : int
          Assign: (destination) (source) 
            Id: k
            Call, name : minloc, with arguments below
              Id: a
              Id: i
              Id: high
          Assign: (destination) (source) 
            Id: t
            ArrId: a, with index below
              Id: k
          Assign: (destination) (source) 
            ArrId: a, with index below
              Id: k
            ArrId: a, with index below
              Id: i
          Assign: (destination) (source) 
            ArrId: a, with index below
              Id: i
            Id: t
          Assign: (destination) (source) 
            Id: i
            Op: +
              Id: i
              Const: 1
  Function declaration, name : main, return type : void
    Single parameter, name : (null), type : void
    Compound statement : 
      Var declaration, name : i, type : int
      Assign: (destination) (source) 
        Id: i
        Const: 0
      While
        Op: <
          Id: i
          Const: 10
        Compound statement : 
          Assign: (destination) (source) 
            ArrId: x, with index below
              Id: i
            Call, name : input, with arguments below
          Assign: (destination) (source) 
            Id: i
            Op: +
              Id: i
              Const: 1
      Call, name : sort, with arguments below
        Id: x
        Const: 0
        Const: 10
      Assign: (destination) (source) 
        Id: i
        Const: 0
      While
        Op: <
          Id: i
          Const: 10
        Compound statement : 
          Call, name : output, with arguments below
            ArrId: x, with index below
              Id: i
          Assign: (destination) (source) 
            Id: i
            Op: +
              Id: i
              Const: 1
